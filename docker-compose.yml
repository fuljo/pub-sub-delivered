version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log

  broker-1:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker-1
    container_name: broker-1
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: 5000
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:19092
    env_file:
      - kafka-broker.env
    volumes:
      - broker-1-data:/var/lib/kafka/data

  broker-2:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker-2
    container_name: broker-2
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: 5000
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:29092
    env_file:
      - kafka-broker.env
    volumes:
      - broker-2-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker-1
      - broker-2
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_TOOLS_ROOT_LOGLEVEL: WARN

  users-service:
    image: fuljo/pub-sub-delivered
    build: .
    hostname: users-service
    container_name: users-service
    depends_on:
      - broker-1
      - broker-2
      - schema-registry
    restart: on-failure
    environment:
      APP_MAIN_CLASS: com.fuljo.polimi.middleware.pub_sub_delivered.users.UsersService
      APP_ARGS: -b "broker-1:9092,broker-2:9092" -s http://schema-registry:8081

  orders-service:
    image: fuljo/pub-sub-delivered
    build: .
    hostname: orders-service
    container_name: orders-service
    depends_on:
      - broker-1
      - broker-2
      - schema-registry
    restart: on-failure
    environment:
      APP_MAIN_CLASS: com.fuljo.polimi.middleware.pub_sub_delivered.orders.OrdersService
      APP_ARGS: -b "broker-1:9092,broker-2:9092" -s http://schema-registry:8081

  shipping-service:
    image: fuljo/pub-sub-delivered
    build: .
    hostname: shipping-service
    container_name: shipping-service
    depends_on:
      - broker-1
      - broker-2
      - schema-registry
    restart: on-failure
    environment:
      APP_MAIN_CLASS: com.fuljo.polimi.middleware.pub_sub_delivered.shipping.ShippingService
      APP_ARGS: -b "broker-1:9092,broker-2:9092" -s http://schema-registry:8081

  web:
    image: caddy:alpine
    hostname: web
    container_name: web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./web:/srv

volumes:
  zk-data: {}
  zk-logs: {}
  broker-1-data: {}
  broker-2-data: {}